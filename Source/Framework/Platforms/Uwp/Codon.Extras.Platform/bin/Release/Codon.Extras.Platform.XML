<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Codon.Extras.Platform</name>
    </assembly>
    <members>
        <member name="T:Codon.LauncherModel.Launchers.EmailComposeLauncher">
            <summary>
            UWP implementation of <see cref="T:Codon.LauncherModel.Launchers.IEmailComposeLauncher"/>.
            </summary>
        </member>
        <member name="P:Codon.LauncherModel.Launchers.EmailComposeLauncher.UseHtmlFormat">
            <summary>
            This is ignored in Windows Phone.
            </summary>
        </member>
        <member name="P:Codon.LauncherModel.Launchers.EmailComposeLauncher.CanSendMail">
            <summary>
            Always returns <c>true</c> on Windows Phone.
            </summary>
        </member>
        <member name="T:Codon.LauncherModel.Launchers.PhotoLauncher">
            <summary>
            The UWP implementation of the <c>IPhotoLauncher</c>.
            </summary>
        </member>
        <member name="T:Codon.LauncherModel.Launchers.PhotoResultBase">
            <summary>
            The base class for a photo chooser result, which includes,
            for example, the photo that the user selected.
            </summary>
        </member>
        <member name="T:Codon.UI.Elements.BooleanToVisibilityConverter">
            <summary>
            This class allows the visibility of an element
            to be set according to a bound value.
            The visibility value is determined by the 
            parameter and the value. 
            The parameter is a combination of three values, 
            and appears like this:
            VisibilityWhenTrue, VisibilityWhenFalse, VisibilityWhenNull
            For example, if you wish to set the visibility of an element
            such that it is collapsed when the value is true, 
            visible when the value is false, 
            and hidden when the value is null;
            you would use the following parameter:
            "Collapsed, Visible, Collapsed"
            
            For Android, use the Android <c>ViewState</c> enum values:
            "Gone, Visible, Invisible"
            </summary>
        </member>
        <member name="M:Codon.UI.Elements.BooleanToVisibilityConverter.Convert(System.Object,System.Type,System.Object,System.String)">
            <summary>
            This class allows the visibility of an element
            to be set according to a bound value.
            The visibility value is determined by the 
            parameter and the value. 
            The parameter is a combination of three values, 
            and appears like this:
            VisibilityWhenTrue, VisibilityWhenFalse, VisibilityWhenNull
            For example, if you wish to set the visibility of an element
            such that it is collapsed when the value is true, 
            visible when the value is false, 
            and hidden when the value is null;
            you would use the following parameter:
            "Collapsed, Visible, Collapsed"
            
            For Android, use the Android <c>ViewState</c> enum values:
            "Gone, Visible, Invisible"
            </summary>
        </member>
        <member name="T:Codon.UI.Elements.PropertyValidation">
            <summary>
            This class is used by UWP and WPF to enable 
            Silverlight like <c>INotifyDataErrorInfo</c> behaviour.
            </summary>
        </member>
        <member name="T:Codon.UI.Elements.AbsentValueToVisibiltyConverter">
            <summary>
            Converts a boolean value to a <see cref="T:Windows.UI.Xaml.Visibility"/> value, 
            and vice versa.
            </summary>
        </member>
        <member name="T:Codon.UI.Elements.StringFormatConverter">
            <summary>
            This <see cref="T:Windows.UI.Xaml.Data.IValueConverter"/>
            calls through to <see cref="M:System.String.Format(System.String,System.Object)"/>.
            The parameter is the format, or second parameter, 
            while the converter value is the first parameter.
            </summary>
        </member>
        <member name="T:Framework.Device.ClipboardService">
            <summary>
            UWP implementation of the <see cref="T:Codon.Services.IClipboardService"/>.
            </summary>
        </member>
    </members>
</doc>
